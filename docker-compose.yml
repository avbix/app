version: '3' # Версия файла Docker Compose

networks:
  network2:
    name: network2

services:
  nginx:
    container_name: nginx # Название контейнера для службы Nginx.
    image: nginx # Используемый образ Docker для Nginx.
    ports:
      - 80:80 # Отображение порта 80 внутри контейнера на порт 80 хоста.
    volumes:
      - ./vhost.conf:/etc/nginx/conf.d/default.conf # Монтирование локального файла конфигурации в контейнер Nginx.
      - ./www:/var/www/public_html # Монтирование локальной директории в директорию /var/www/public_html в контейнере.
    networks:
      - network2
    depends_on:
      - php
      - mysql # Ожидание запуска службы PHP и MySQL перед запуском Nginx.

  php:
    container_name: php # Название контейнера для службы PHP.
    build: ./www # Путь к директории с Dockerfile для создания образа контейнера.
    volumes:
      - ./www:/var/www/public_html # Монтирование локальной директории в директорию /var/www/public_html в контейнере.
    networks:
      - network2
    depends_on:
      - mysql # Ожидание запуска службы MySQL перед запуском PHP.

  mysql:
    container_name: mysql # Название контейнера для службы MySQL.
    image: mysql # Используемый образ Docker для MySQL.
    volumes:
      - ./mysql-data:/var/lib/mysql # Монтирование локальной директории для хранения данных MySQL.
    environment:
      - MYSQL_ROOT_PASSWORD=root # Установка пароля для пользователя root MySQL.
    networks:
      - network2

  phpmyadmin:
    container_name: phpmyadmin # Название контейнера для службы phpMyAdmin.
    image: phpmyadmin # Используемый образ Docker для phpMyAdmin.
    ports:
      - 1500:80 # Отображение порта 1500 внутри контейнера на порт 80 хоста.
    environment:
      - PMA_HOST=mysql # Указание хоста MySQL, к которому будет подключаться phpMyAdmin.
    networks:
      - network2
    depends_on:
      - mysql # Ожидание запуска службы MySQL перед запуском phpMyAdmin.
